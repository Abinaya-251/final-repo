on: [push]
name: build to acr and deploy to aks
env:
  REGISTRY_NAME: abinaya
  CLUSTER_NAME: MY_KUBE_CLUSTER
  CLUSTER_RESOURCE_GROUP: AKS_RG
  NAMESPACE: default

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
          
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        
        - name: 'Build and push image to acr'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
        - run: |
            docker build --file ./Dockerfile -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:latest .
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:latest
        - uses: azure/aks-set-context@v1
          with:
            creds: '${{ secrets.AZURE_CREDENTIALS }}'
            cluster-name: ${{ env.CLUSTER_NAME }}
            resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
        - run: |
            kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
        - uses: azure/k8s-create-secret@v1
          with:
            container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
            container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
            container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
            secret-name: ${{ env.REGISTRY_NAME }}-registry-connection
            namespace: ${{ env.NAMESPACE }}
    
        - uses: azure/k8s-deploy@v1
          with:
           manifests: |
             aks/deployment.yaml
             aks/service.yaml
           images: |
             ${{ env.REGISTRY_NAME }}.azurecr.io/myimage:latest
             imagePullPolicy: Always
           imagepullsecrets: |
             ${{ env.REGISTRY_NAME }}-registry-connection
           namespace: ${{ env.NAMESPACE }}

